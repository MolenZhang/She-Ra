// Code generated by protoc-gen-go.
// source: configData.proto
// DO NOT EDIT!

/*
Package configdata is a generated protocol buffer package.

It is generated from these files:
	configData.proto

It has these top-level messages:
	Job
	CodeManager
	Git
	Repo
	GitAdvanced
*/
package configdata

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CodeManager_Kind int32

const (
	CodeManager_none CodeManager_Kind = 0
	CodeManager_git  CodeManager_Kind = 1
)

var CodeManager_Kind_name = map[int32]string{
	0: "none",
	1: "git",
}
var CodeManager_Kind_value = map[string]int32{
	"none": 0,
	"git":  1,
}

func (x CodeManager_Kind) String() string {
	return proto.EnumName(CodeManager_Kind_name, int32(x))
}
func (CodeManager_Kind) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type Job struct {
	Id                  string       `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	ExecTime            string       `protobuf:"bytes,2,opt,name=ExecTime" json:"ExecTime,omitempty"`
	MaxExecutionRecords int32        `protobuf:"varint,3,opt,name=MaxExecutionRecords" json:"MaxExecutionRecords,omitempty"`
	MaxKeepDays         int32        `protobuf:"varint,4,opt,name=MaxKeepDays" json:"MaxKeepDays,omitempty"`
	CodeManager         *CodeManager `protobuf:"bytes,5,opt,name=codeManager" json:"codeManager,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Job) GetCodeManager() *CodeManager {
	if m != nil {
		return m.CodeManager
	}
	return nil
}

type CodeManager struct {
	Select CodeManager_Kind `protobuf:"varint,1,opt,name=Select,enum=configdata.CodeManager_Kind" json:"Select,omitempty"`
	// Types that are valid to be assigned to RepoKind:
	//	*CodeManager_XGit
	RepoKind isCodeManager_RepoKind `protobuf_oneof:"RepoKind"`
}

func (m *CodeManager) Reset()                    { *m = CodeManager{} }
func (m *CodeManager) String() string            { return proto.CompactTextString(m) }
func (*CodeManager) ProtoMessage()               {}
func (*CodeManager) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isCodeManager_RepoKind interface {
	isCodeManager_RepoKind()
}

type CodeManager_XGit struct {
	XGit *Git `protobuf:"bytes,2,opt,name=_git,json=Git,oneof"`
}

func (*CodeManager_XGit) isCodeManager_RepoKind() {}

func (m *CodeManager) GetRepoKind() isCodeManager_RepoKind {
	if m != nil {
		return m.RepoKind
	}
	return nil
}

func (m *CodeManager) GetXGit() *Git {
	if x, ok := m.GetRepoKind().(*CodeManager_XGit); ok {
		return x.XGit
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CodeManager) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CodeManager_OneofMarshaler, _CodeManager_OneofUnmarshaler, _CodeManager_OneofSizer, []interface{}{
		(*CodeManager_XGit)(nil),
	}
}

func _CodeManager_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CodeManager)
	// RepoKind
	switch x := m.RepoKind.(type) {
	case *CodeManager_XGit:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.XGit); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CodeManager.RepoKind has unexpected type %T", x)
	}
	return nil
}

func _CodeManager_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CodeManager)
	switch tag {
	case 2: // RepoKind._git
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Git)
		err := b.DecodeMessage(msg)
		m.RepoKind = &CodeManager_XGit{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CodeManager_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CodeManager)
	// RepoKind
	switch x := m.RepoKind.(type) {
	case *CodeManager_XGit:
		s := proto.Size(x.XGit)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Git struct {
	Branch string `protobuf:"bytes,1,opt,name=Branch" json:"Branch,omitempty"`
	Repo   *Repo  `protobuf:"bytes,2,opt,name=repo" json:"repo,omitempty"`
}

func (m *Git) Reset()                    { *m = Git{} }
func (m *Git) String() string            { return proto.CompactTextString(m) }
func (*Git) ProtoMessage()               {}
func (*Git) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Git) GetRepo() *Repo {
	if m != nil {
		return m.Repo
	}
	return nil
}

type Repo struct {
	Url         string       `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Credentials string       `protobuf:"bytes,2,opt,name=credentials" json:"credentials,omitempty"`
	Advanced    *GitAdvanced `protobuf:"bytes,3,opt,name=advanced" json:"advanced,omitempty"`
}

func (m *Repo) Reset()                    { *m = Repo{} }
func (m *Repo) String() string            { return proto.CompactTextString(m) }
func (*Repo) ProtoMessage()               {}
func (*Repo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Repo) GetAdvanced() *GitAdvanced {
	if m != nil {
		return m.Advanced
	}
	return nil
}

type GitAdvanced struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Refspec string `protobuf:"bytes,2,opt,name=refspec" json:"refspec,omitempty"`
}

func (m *GitAdvanced) Reset()                    { *m = GitAdvanced{} }
func (m *GitAdvanced) String() string            { return proto.CompactTextString(m) }
func (*GitAdvanced) ProtoMessage()               {}
func (*GitAdvanced) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*Job)(nil), "configdata.Job")
	proto.RegisterType((*CodeManager)(nil), "configdata.CodeManager")
	proto.RegisterType((*Git)(nil), "configdata.Git")
	proto.RegisterType((*Repo)(nil), "configdata.Repo")
	proto.RegisterType((*GitAdvanced)(nil), "configdata.GitAdvanced")
	proto.RegisterEnum("configdata.CodeManager_Kind", CodeManager_Kind_name, CodeManager_Kind_value)
}

func init() { proto.RegisterFile("configData.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x52, 0xcd, 0x8e, 0xd3, 0x30,
	0x10, 0xde, 0x34, 0xd9, 0x6e, 0x98, 0x48, 0x4b, 0x34, 0x48, 0x10, 0x10, 0x87, 0x28, 0xe2, 0xd0,
	0x53, 0x84, 0xba, 0x5c, 0x10, 0x27, 0x76, 0x17, 0x95, 0x52, 0xf5, 0x62, 0xb8, 0x23, 0xd7, 0x9e,
	0x06, 0x4b, 0xad, 0x1d, 0x39, 0x2e, 0x2a, 0x6f, 0xc1, 0x23, 0xf1, 0x68, 0xc8, 0xc6, 0xb4, 0x11,
	0x62, 0x6f, 0xfe, 0x7e, 0x66, 0xbe, 0xcc, 0x4c, 0xa0, 0x14, 0x46, 0x6f, 0x55, 0x77, 0xcf, 0x1d,
	0x6f, 0x7b, 0x6b, 0x9c, 0x41, 0xf8, 0xc3, 0x48, 0xee, 0x78, 0xf3, 0x2b, 0x81, 0xf4, 0x93, 0xd9,
	0xe0, 0x35, 0x4c, 0x96, 0xb2, 0x4a, 0xea, 0x64, 0xf6, 0x88, 0x4d, 0x96, 0x12, 0x5f, 0x40, 0xfe,
	0xe1, 0x48, 0xe2, 0x8b, 0xda, 0x53, 0x35, 0x09, 0xec, 0x09, 0xe3, 0x6b, 0x78, 0xb2, 0xe6, 0x47,
	0x0f, 0x0f, 0x4e, 0x19, 0xcd, 0x48, 0x18, 0x2b, 0x87, 0x2a, 0xad, 0x93, 0xd9, 0x25, 0xfb, 0x9f,
	0x84, 0x35, 0x14, 0x6b, 0x7e, 0x5c, 0x11, 0xf5, 0xf7, 0xfc, 0xc7, 0x50, 0x65, 0xc1, 0x39, 0xa6,
	0xf0, 0x2d, 0x14, 0xc2, 0x48, 0x5a, 0x73, 0xcd, 0x3b, 0xb2, 0xd5, 0x65, 0x9d, 0xcc, 0x8a, 0xf9,
	0xb3, 0xf6, 0xfc, 0xa5, 0xed, 0xdd, 0x59, 0x66, 0x63, 0x6f, 0xf3, 0x33, 0x81, 0x62, 0x24, 0xe2,
	0x1b, 0x98, 0x7e, 0xa6, 0x1d, 0x09, 0x17, 0xc6, 0xb9, 0x9e, 0xbf, 0x7c, 0xa0, 0x4b, 0xbb, 0x52,
	0x5a, 0xb2, 0xe8, 0xc5, 0x57, 0x90, 0x7d, 0xed, 0x94, 0x0b, 0xc3, 0x16, 0xf3, 0xc7, 0xe3, 0x9a,
	0x85, 0x72, 0x1f, 0x2f, 0x58, 0xba, 0x50, 0xae, 0x79, 0x0e, 0x99, 0xaf, 0xc2, 0x1c, 0x32, 0x6d,
	0x34, 0x95, 0x17, 0x78, 0x05, 0x69, 0xa7, 0x5c, 0x99, 0xdc, 0x02, 0xe4, 0x8c, 0x7a, 0xe3, 0xe5,
	0xe6, 0x0e, 0xbc, 0x1b, 0x9f, 0xc2, 0xf4, 0xd6, 0x72, 0x2d, 0xbe, 0xc5, 0xc5, 0x46, 0xe4, 0xb3,
	0x2c, 0xf5, 0x26, 0x66, 0x95, 0xe3, 0x2c, 0xdf, 0x82, 0x05, 0xb5, 0x31, 0x90, 0x79, 0x84, 0x25,
	0xa4, 0x07, 0xbb, 0x8b, 0x2d, 0xfc, 0xd3, 0xaf, 0x53, 0x58, 0x92, 0xa4, 0x9d, 0xe2, 0xbb, 0x21,
	0xde, 0x67, 0x4c, 0xe1, 0x0d, 0xe4, 0x5c, 0x7e, 0xe7, 0x5a, 0x90, 0x0c, 0x77, 0xf9, 0x67, 0x97,
	0x0b, 0xe5, 0xde, 0x47, 0x99, 0x9d, 0x8c, 0xcd, 0x3b, 0x28, 0x46, 0x02, 0x22, 0x64, 0x9a, 0xef,
	0x29, 0x06, 0x87, 0x37, 0x56, 0x70, 0x65, 0x69, 0x3b, 0xf4, 0x24, 0x62, 0xea, 0x5f, 0xb8, 0x99,
	0x86, 0x7f, 0xeb, 0xe6, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x28, 0x8e, 0x0f, 0x6f, 0x02,
	0x00, 0x00,
}
